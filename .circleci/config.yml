
version: 2
jobs:
  build:
      - image: circleci/ruby:2.5.1-node-browsers
        environment:
#  ①注意！！ bundlerのバージョンが2.0.1以上だと、bundle installに失敗します。ここに環境として指定します。
          - BUNDLER_VERSION: 2.2.24
#  ②注意！！ circleCIは仮想環境を構築するので、そのときに使うデータベースを指定する必要があります。
          - RAILS_ENV: 'test'
      # Mysqlのバージョン5.6で動かしていたため、5.6を指定
      - image: circleci/postgres:9.6
        environment:
          #それぞれ設定
          POSTGRES_USER: postgres
          #下記を書けばパスワードなしでデータベースにログインしてくれる。 
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_DB: graduation_work_test
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
# ①bundler2.0.1以降のものを使っているのであれば、環境変数と合わせて指定する必要があります。
            gem install bundler -v 2.2.24
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
# ②ちょっと無理やりですが、database.ymlとdatabase.yml.ciを入れ替える記述です。
      # - run: mv config/database.yml.ci config/database.yml 
      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

# rspecを走らせる記述です。
      # run tests!
      # - run:
      #     name: run tests
      #     command: |
      #       mkdir /tmp/test-results
      #       TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
      #         circleci tests split --split-by=timings)"


# ③ここでRspecJunitFormatterというgemをインストールしていないとエラーになります。gemfileに記述しましょう。
            bundle exec rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES

      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results